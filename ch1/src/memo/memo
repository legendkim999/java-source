; gitignore 파일작성
; .gitignore : 버전 관리할 때 무시할 파일 기록

; 3. 작성된 소스 버전관리
; (1) 로컬 저장소에 관리할 파일 추가 : git add 관리할파일명
; (2) 추가된 파일을 저장하고 확인하기 : git commit -m "메시지"

; 4. 원격(remote)리포지토리(github)
; (1)원격리포지토리 추가 : git remote add origin github주소
; (2) 원격리포지토리 파일 추가 : git push origin(원격) main(로컬)

; 개발도구
; -에디터(IDE) : 자바
; (1) Visual studio code : 인텔리J와 유사/free/다양한 extension을 통해서 다른 개발 시에도 많이 사용
; (2) 이클립스 : free 버전(주로 자발 개발시 사용)
; (3) 인텔리J : free 버전은 기능 제한됨
;                     사용료 지불해야 전체 기능 사용 가능


; Java
; -웹개발 필수 언어
; -대소문자 구분함
;  클래스명은 대문자로 시작
;  메소드명은 소문자로 시작
; -자바는 클래스가 기본임

; 1.변수 = 메모리 내 저장공간
;  -저장 공간마다 담을 수 있는 값이 달라짐
; -타입 변수명 = 값;
; -타입 : byte, short,int, long, float, double, char, boolean
; -변수명 : 영어, 한글명 가능하나 영어 소문자를 사용함(호환성 문제)(flag, curPos(두 단어가 합쳐지면 뒤에 시작하는 말은 대문자로 시작함)
; -int num = 10;
; -타입 : 정수형(byte, short, int, long 바이트 쇼트는 잘 안씀), 문자형(char), 실수형(float, double), 논리형(boolean)
; -정수형(byte, short, int, long)
; byte : 1byte 저장공간 / short : 2byte / int(기본형태) : 4byte / long : 8byte

; -실수형(float, double) : 소수점, 지수형태
; float : 4byte / double(기본타입) : 8byte

; -문자형(char) : 홑따옴표 사용
;  char : 2byte : 
; char ch1 = 'a';

; -논리형(boolean) : true, false 값 표현 /  1 byte

; 2. 상수 : 메모리 내 저장 공간 + 한번 저장 하면 다른 값으로 변경이 불가능
;  -final 타입 상수명(대문자) = 값;

; 3. 형변환(캐스팅, casting)

; - 변수 또는 상수의 타입을 다른 타입으로 변환
; - 강제형변환 : (변환할타입) 변수명

; 4. 연산자 
; - 연산자 : 연산을 수행하는 기호(+,-,*,/......)
; - 피연산자 : 변수, 상수...
; - 연산자 종류
; 1)산술연산자 : + - * /  %  <<  >>
; 2)비교연산자 : >, <, >=, <=, ==, !=
; 3)논리연산자 : && || !
; 4)대입연산자 : =
; 5)삼항연산자 : 조건 ? 참일때 : 거짓일때
; 6)단항연산자 : ++ --

; 제어문 : 조건문, 반복문

; 5. 조건문 : 조건에 따라서 수행 여부 결정
;  - if / switch
; if(조건식){ 수행할 문장 }

; 6. 반복문 : 어떤 작업이 반복적으로 수행 되도록 할 때 사용
; - 종류 : for, while, do~while
; for (int i = 1; i <= 10; i++) {
;             sum += i;
; 1) int i = 1; 실행
; 2) i <= 10; 조건식 검사=> true
; 3) for 구문 안으로 진입 후 구문 실행
; 4) i++ 실행
; 5) 조건식 검사 => 2) ~4) 실행

;    for (int i = 0; i < 5; i++) {
;             for (int j = 0; j < 10; j++) {
;                 System.out.print("*");
;             }
;             System.out.println();
;         }
; 1) 바깥쪽 for (int i = 0;
; 2) 바깥쪽 for i < 5;
; 3) 안쪽 for int j = 0;
; 4) 안쪽 for j < 10;
; 5)  System.out.print("*");
; 6) 안쪽 for j++
; 7) 안쪽 for j < 10;
; 8) System.out.print("*");
; 9) 6~8 수행
; 10) j 가 10이 되면 j < 10; 안쪽 for 문 종료
; 11) System.out.println();
; 12) i++;
; 13 바깥쪽 for i < 5;


; 기본
; bit : 0 or 1
; byte : 8bit 00000000bit/00000001 = 1byte

; print,println,printf 차이점

; print()
; 출력문 내부의 값을 그대로 출력한다. (자동 개행 없음)
; System.out.print("Hello!");
; System.out.print("Hello!");
; result

; Hello!Hello!

; println()
; 출력문 내부의 값을 그대로 출력한다. (자동 개행 있음)
; System.out.println("Hello!");
; System.out.println("Hello!");

; printf()
; 값을 다른 형식으로 출력할 수 없는 print(), println()에 반해 printf()는 지시자를 이용해 여러 형식으로 변환하여 출력할 수 있다. (자동 개행 없음)
; println()은 값을 직접 바꾸지 않는 이상 같은 값을 다른 형식으로 출력할 수 없다.
; printf()의 지시자
; 지시자	설명
; %c	문자(character) 형식으로 출력
; %s	문자열(string) 형식으로 출력
; %b	boolean 형식으로 출력
; %d	10진수(decimal) 형식으로 출력
; %o	8진수(octal) 형식으로 출력
; %x	16진수(hexadecimal) 형식으로 출력
; %f	부동소수점(floating point) 형식으로 출력
; %e	지수(exponent) 표현식의 형식으로 출력
; %n	줄바꿈

; 유니코드 : 전세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 표준
; a=>97 / A = 65
; 가=>44032

; python
; -웹개발 가능 하나 우리나라는 관공서, 금융 업종에서는 Java를 주로 사용